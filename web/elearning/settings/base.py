"""
Django settings for elearningplatform project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
# How to Use Third-Party Applications and Libraries in Django
# https://vegibit.com/how-to-use-third-party-applications-and-libraries-in-django/#:~:text=Configuring%20settings%3A%20Some%20third%2Dparty,as%20API%20keys%20or%20middleware.

import os
import dotenv
dotenv.load_dotenv()
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))  # web/elearning
WEB_DIR = os.path.dirname(BASE_DIR)                                     # elearning/web
DATA_DIR = os.path.dirname(os.path.dirname(__file__))                   # web/elearning/setting

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#88kzszxqn=%9us%j@^koz+q8sfna$&rqpz8+h9+fbzvq=a3a&'


# Application definition

DJANGO_APPS = [
    # django-cms
    'djangocms_admin_style',
    # ===============
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',

    'parler',
    'ckeditor',

    'taggit',

    # mobile user
    'django_user_agents',

    'corsheaders',
]

# ========== Mobile user settings================

# Cache backend is optional, but recommended to speed up user agent parsing
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
#         'LOCATION': '127.0.0.1:8000',
#     }
# }
#
# Name of cache backend to cache user agents. If it not specified default
# cache alias will be used. Set to `None` to disable caching.
# USER_AGENTS_CACHE = 'default'

MIDDLEWARE_CLASSES = (
    # other middlewares...
    'django_user_agents.middleware.UserAgentMiddleware',
)

# ==========End Of Mobile user settings================

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = '//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js'

CKEDITOR_CONFIGS = {
    'default':
        {
            'toolbar': 'full',
            'width': 'auto',
            'extraPlugins': ','.join([
                'codesnippet',
            ]),
        },
}


CMS_APPS = [
    # django-cms / cms and menus are the core django CMS modules.
    'django.contrib.sites',
    'cms',
    'menus',
    'treebeard',
    'sekizai',  # Django Sekizai is required by the CMS for static files management
    'filer',  # Django Filer provides file and image management.
    'easy_thumbnails',  # Required to create new versions of images in different sizes
    'mptt',  # manages the tree structure of the folders in Django Filer.
    'djangocms_text_ckeditor',  # Django CMS CKEditor is the default text editor for django CMS.
    'djangocms_link',
    'djangocms_file',
    'djangocms_picture',
    'djangocms_video',
    'djangocms_googlemap',
    'djangocms_snippet',
    'djangocms_style',
    'djangocms_icon',
]

BOOTSTRAP_APPS = [
    'djangocms_bootstrap4',
    'djangocms_bootstrap4.contrib.bootstrap4_alerts',
    'djangocms_bootstrap4.contrib.bootstrap4_badge',
    'djangocms_bootstrap4.contrib.bootstrap4_card',
    'djangocms_bootstrap4.contrib.bootstrap4_carousel',
    'djangocms_bootstrap4.contrib.bootstrap4_collapse',
    'djangocms_bootstrap4.contrib.bootstrap4_content',
    'djangocms_bootstrap4.contrib.bootstrap4_grid',
    'djangocms_bootstrap4.contrib.bootstrap4_jumbotron',
    'djangocms_bootstrap4.contrib.bootstrap4_link',
    'djangocms_bootstrap4.contrib.bootstrap4_listgroup',
    'djangocms_bootstrap4.contrib.bootstrap4_media',
    'djangocms_bootstrap4.contrib.bootstrap4_picture',
    'djangocms_bootstrap4.contrib.bootstrap4_tabs',
    'djangocms_bootstrap4.contrib.bootstrap4_utilities',
]

LOCAL_APPS = [

    'elearning.apps.core1',
    'elearning.apps.core',
    'elearning.apps.users',
    'elearning.apps.courses',
    'elearning.apps.actions',
    'elearning.apps.partners',
    'elearning.apps.research',
    'elearning.apps.marketplace',
    'elearning.apps.videocall',


]

INSTALLED_APPS = DJANGO_APPS + CMS_APPS + BOOTSTRAP_APPS + LOCAL_APPS  # + WebApps + acApps + BOOTSTRAP_APPS


MIDDLEWARE = [
     # django-cms
    'cms.middleware.utils.ApphookReloadMiddleware',
    #  =============
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',


    'corsheaders.middleware.CorsMiddleware',

    # django-cms
    'django.middleware.locale.LocaleMiddleware',
    'cms.middleware.user.CurrentUserMiddleware',
    'cms.middleware.page.CurrentPageMiddleware',
    'cms.middleware.toolbar.ToolbarMiddleware',
    'cms.middleware.language.LanguageCookieMiddleware',
]

ROOT_URLCONF = 'elearning.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # django-cms
                'sekizai.context_processors.sekizai',
                'cms.context_processors.cms_settings',
                'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'elearning.wsgi.application'


CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",  # Add your frontend URL here
    # "https://yourproductionurl.com",
]


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

THUMBNAIL_HIGH_RESOLUTION = True

THUMBNAIL_PROCESSORS = (
    'easy_thumbnails.processors.colorspace',
    'easy_thumbnails.processors.autocrop',
    'filer.thumbnail_processors.scale_and_crop_with_subject_location',
    'easy_thumbnails.processors.filters'
)

# Django-cms / django CMS needs to use Django’s django.contrib.sites framework. You’ll need to set a SITE_ID
SITE_ID = 1
X_FRAME_OPTIONS = 'SAMEORIGIN'
CMS_PERMISSION = True
# =========

CMS_TEMPLATES = [
    ('home.html', 'Home page template'),


    ('sidenav.html', 'Side Nave'),
    ('sidebar_left.html', 'Sidebar Left'),
]

DJANGOCMS_BOOTSTRAP4_CAROUSEL_ASPECT_RATIOS = (
    (16, 9),
    (14, 9),
    (12, 9),
    (10, 5),
    (15, 5),
    (20, 5),
    (25, 5),
    (30, 5),
    (35, 5),
    (40, 5),
)

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en'
LANGUAGES = (
    ## Customize this:
    # http://www.i18nguy.com/unicode/language-identifiers.html
    #('en', ugettext('en')),
    ('en', ('English')),
    ('fr', ('French')),
    # ('es', ('Spanish')),
    ('ar', ('Arabic')),
)

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = "/media/"

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_ROOT = os.path.join(WEB_DIR, "static")

# ============================
# Database backup
# DropBox: Token = mgDKBEyxfz8AAAAAAAAK-nu0HBxbCy9QINbwzOFKFb-PGDPN3BhVhFmYtvTpwUX-

# DEFAULT_FILE_STORAGE = 'storages.backends.dropbox.DropBoxStorage'
# DROPBOX_OAUTH2_TOKEN = 'mgDKBEyxfz8AAAAAAAAK-nu0HBxbCy9QINbwzOFKFb-PGDPN3BhVhFmYtvTpwUX-'
#
DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage'
DBBACKUP_STORAGE_OPTIONS = {'location': STATIC_ROOT+'/postgres_backup/'}

#
# DBBACKUP_STORAGE = 'storages.backends.dropbox.DropBoxStorage'
# DBBACKUP_STORAGE_OPTIONS = {
#     'oauth2_access_token': 'mgDKBEyxfz8AAAAAAAAK-nu0HBxbCy9QINbwzOFKFb-PGDPN3BhVhFmYtvTpwUX-',
#     'root_path': os.path.join(BASE_DIR, "media")
# }
#
# DROPBOX_ROOT_PATH = os.path.join(BASE_DIR, "media")

# pip install dropbox
# pip install django-dbbackup
# pip install dropbox django-storages


# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'danielopio540@gmail.com'
EMAIL_HOST_PASSWORD = 'hcusjvmuupklpbvy'
EMAIL_PORT = 587
EMAIL_USE_TLS = True


AGORA = {
        'AGORA_APP_ID': 'c57597094d5b4e0f8f799565b97764f5',
        'AGORA_APP_CERTIFICATE': 'ad2b852df3af46a4ba99db8b55bbad09',
}
#
#
PUSHER = {
          'PUSHER_APP_ID': '1710405',
          'PUSHER_KEY': '9c7201a7d112211d5259',
          'PUSHER_SECRET': '42fd8d843b634cf7f358',
          'PUSHER_CLUSTER': 'ap2',
}


# export AGORA_APP_ID='c57597094d5b4e0f8f799565b97764f5'
# export AGORA_APP_CERTIFICATE='ad2b852df3af46a4ba99db8b55bbad09'
# export PUSHER_APP_ID='1710405'
# export PUSHER_KEY='9c7201a7d112211d5259'
# export PUSHER_SECRET='42fd8d843b634cf7f358'
# export PUSHER_CLUSTER='ap2'
# python manage.py runserver


# set AGORA_APP_ID=c57597094d5b4e0f8f799565b97764f5
# set AGORA_APP_CERTIFICATE=ad2b852df3af46a4ba99db8b55bbad09
# set PUSHER_APP_ID=1710405
# set PUSHER_KEY=9c7201a7d112211d5259
# set PUSHER_SECRET=42fd8d843b634cf7f358
# set PUSHER_CLUSTER=ap2