# Generated by Django 3.2 on 2023-09-24 10:08

import cms.models.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import elearning.apps.core.fields
import filer.fields.image
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        ('cms', '0022_auto_20180620_1551'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_type', models.IntegerField(choices=[(0, 'Other'), (1, 'Homework'), (2, 'Assignment')], default=2)),
                ('period_start', models.DateTimeField(null=True)),
                ('period_end', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'assignment',
                'verbose_name_plural': 'assignments',
            },
        ),
        migrations.CreateModel(
            name='AssignmentUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('assignment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignment_users', to='courses.assignment')),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='assignment_user_description', to='cms.placeholder')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'assignment_user',
                'verbose_name_plural': 'assignments_user',
            },
        ),
        migrations.CreateModel(
            name='ChartOfAccounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(default='0000000000', max_length=10)),
                ('account_type', models.SmallIntegerField(default='2')),
                ('parent', models.PositiveIntegerField(default=1)),
            ],
            options={
                'verbose_name': 'chart_of_account',
                'verbose_name_plural': 'chart_of_accounts',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_app', models.CharField(blank=True, help_text='Please supply the link_app.', max_length=50, verbose_name='link_app')),
                ('link_model', models.CharField(blank=True, help_text='Please supply the link_model.', max_length=50, verbose_name='link_model')),
                ('is_team', models.BooleanField(default=False)),
                ('order', elearning.apps.core.fields.OrderField(blank=True, default=1)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'course',
                'verbose_name_plural': 'courses',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CourseSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_method', models.IntegerField(choices=[(0, 'Other'), (1, 'Individual'), (2, 'Random')], default=1)),
                ('max_students_per_team', models.IntegerField(default=3)),
                ('min_students_per_team', models.IntegerField(default=3)),
                ('max_number_of_teams', models.IntegerField(default=7)),
                ('min_number_of_teams', models.IntegerField(default=7)),
                ('certificate_number', models.SmallIntegerField(default=1)),
                ('created_date', models.DateField(auto_now_add=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('end_date', models.DateField(default=django.utils.timezone.now)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('target_id', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('slug', models.SlugField(default='', help_text='Please supply the course slug.', max_length=128, verbose_name='slug')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_schedules', to='courses.course')),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='course_ schedule_description', to='cms.placeholder')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
                ('instructors', models.ManyToManyField(related_name='course_instructors', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='user_course_schedule_owns', to=settings.AUTH_USER_MODEL)),
                ('target_ct', models.ForeignKey(blank=True, limit_choices_to={'model__in': ('game', 'project')}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_schedule', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'course schedule',
                'verbose_name_plural': 'courses schedule',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('order', elearning.apps.core.fields.OrderField(blank=True, default=1)),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='department_description', to='cms.placeholder')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'department',
                'verbose_name_plural': 'departments',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='user/assignments/files')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='user/assignments/images')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('paid', models.BooleanField(default=False)),
                ('braintree_id', models.CharField(blank=True, max_length=150)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_order_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', elearning.apps.core.fields.OrderField(blank=True, default=1)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_sections', to='courses.course')),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='section_description', to='cms.placeholder')),
            ],
            options={
                'verbose_name': 'section',
                'verbose_name_plural': 'sections',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SubSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', elearning.apps.core.fields.OrderField(blank=True, default=1)),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='sub_section_description', to='cms.placeholder')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_sub_sections', to='courses.section')),
            ],
            options={
                'verbose_name': 'sub_section',
                'verbose_name_plural': 'sub_sections',
                'ordering': ['order'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='syllabus', to='courses.course')),
                ('description', cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='syllabus_description', to='cms.placeholder')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'syllabus',
                'verbose_name_plural': 'syllabus',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('url', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TrialBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.IntegerField(choices=[(0, 'Other'), (1, 'day'), (2, 'month'), (3, 'year')], default=1)),
                ('flow_type', models.IntegerField(choices=[(0, 'Other'), (1, 'flow'), (2, 'cumulative')], default=1)),
                ('pkey_date', models.IntegerField(default=0)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cofa_tbs', to='courses.chartofaccounts')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', help_text='Please supply the team name.', max_length=50, verbose_name='name')),
                ('course_schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_teams', to='courses.courseschedule')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL)),
            ],
            options={
                'verbose_name': 'team',
                'verbose_name_plural': 'teams',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('course_schedule_user_slug', models.SlugField(default='', help_text='Please supply the course slug.', max_length=128, verbose_name='course_schedule_user_slug')),
                ('code', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_price_after_discount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='courses.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='courses.courseschedule')),
            ],
        ),
        migrations.CreateModel(
            name='GeneralLedger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_now_add=True)),
                ('updated', models.DateField(auto_now=True)),
                ('target_id', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('transaction', models.PositiveIntegerField()),
                ('sub_transaction', models.SmallIntegerField(default=1)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=18)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cofa_gls', to='courses.chartofaccounts')),
                ('target_ct', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_gl_obj', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'general ledger',
                'verbose_name_plural': 'general ledgers',
            },
        ),
        migrations.CreateModel(
            name='CourseScheduleUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('active', models.BooleanField(default=False)),
                ('graduated', models.BooleanField(default=False)),
                ('paid', models.BooleanField(default=False)),
                ('slug', models.SlugField(default='', help_text='Please supply the course slug.', max_length=128, verbose_name='slug')),
                ('course_schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_course_schedules', to='courses.courseschedule')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='courses.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_schedule_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'course schedule user',
                'verbose_name_plural': 'courses schedule user',
                'ordering': ['course_schedule', 'team', 'user'],
            },
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_courses', to='courses.department'),
        ),
        migrations.AddField(
            model_name='course',
            name='description',
            field=cms.models.fields.PlaceholderField(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, slotname='course_description', to='cms.placeholder'),
        ),
        migrations.AddField(
            model_name='course',
            name='image',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.FILER_IMAGE_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='instructors',
            field=models.ManyToManyField(related_name='user_instructors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_owns', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('discount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('active', models.BooleanField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupon_items', to='courses.courseschedule')),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentUserContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('order', elearning.apps.core.fields.OrderField(blank=True)),
                ('assignment_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='courses.assignmentuser')),
                ('content_type', models.ForeignKey(limit_choices_to={'model__in': ('text', 'video', 'image', 'file')}, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='assignmentuser',
            name='team_owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_owner_assignments', to='courses.team'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course_schedule',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='course_schedules_assignments', to='courses.courseschedule'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='sub_section',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='courses.subsection'),
        ),
        migrations.CreateModel(
            name='SyllabusTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(default='', help_text='Please supply the syllabus name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='', help_text='Please supply the syllabus slug.', max_length=128, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='courses.syllabus')),
            ],
            options={
                'verbose_name': 'syllabus Translation',
                'db_table': 'courses_syllabus_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SubSectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(default='', help_text='Please supply the sub section name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='', help_text='Please supply the sub section slug.', max_length=128, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='courses.subsection')),
            ],
            options={
                'verbose_name': 'sub_section Translation',
                'db_table': 'courses_subsection_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SectionTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(default='', help_text='Please supply the section name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(blank=True, default='', help_text='Please supply the section slug.', max_length=128, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='courses.section')),
            ],
            options={
                'verbose_name': 'section Translation',
                'db_table': 'courses_section_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DepartmentTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(db_index=True, default='', help_text='Please supply the department name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='', help_text='Please supply the department slug.', max_length=128, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='courses.department')),
            ],
            options={
                'verbose_name': 'department Translation',
                'db_table': 'courses_department_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CourseTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(db_index=True, default='', help_text='Please supply the course name.', max_length=128, verbose_name='name')),
                ('slug', models.SlugField(default='', help_text='Please supply the course slug.', max_length=128, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='courses.course')),
            ],
            options={
                'verbose_name': 'course Translation',
                'db_table': 'courses_course_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ChartOfAccountsTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('account', models.CharField(db_index=True, default='', help_text='Please supply the account name.', max_length=128, verbose_name='account')),
                ('slug', models.SlugField(default='', help_text='Please supply the department slug.', max_length=128, verbose_name='slug')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='courses.chartofaccounts')),
            ],
            options={
                'verbose_name': 'chart_of_account Translation',
                'db_table': 'courses_chartofaccounts_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
